"""
Equations of motion
model name: B110111
"""
import numpy as np
from numpy import cos, sin, pi, sqrt
def info():
    """ Return information about current model present in this package """
    I=dict()
    I['name']='B110111'
    I['nq']=5
    I['nu']=0
    I['sq']=['x','y','phi_x','phi_y','phi_z']
    I['su']=[]
    return I

def forcing(t,q=None,qd=None,p=None,u=None,z=None):
    """ Non linear mass forcing 
    q:  degrees of freedom, array-like: ['x(t)', 'y(t)', 'phi_x(t)', 'phi_y(t)', 'phi_z(t)']
    qd: dof velocities, array-like
    p:  parameters, dictionary with keys: ['J_xx_B', 'J_yy_B', 'J_zz_B', 'M_B', 'g', 'x_BG', 'y_BG', 'z_BG']
    u:  inputs, dictionary with keys: []
           where each values is a function of time
    """
    if z is not None:
        q  = z[0:int(len(z)/2)] 
        qd = z[int(len(z)/2): ] 
    FF = np.zeros((5,1))
    FF[0,0] = -p['M_B']*p['x_BG']*qd[2]*qd[3]*sin(q[4])**3*cos(q[3])**2-p['M_B']*p['x_BG']*qd[2]*qd[3]*sin(q[4])*cos(q[3])**2*cos(q[4])**2+p['M_B']*p['x_BG']*qd[2]*qd[3]*sin(q[4])*cos(q[3])**2+p['M_B']*p['x_BG']*qd[3]**2*sin(q[4])**2*cos(q[3])*cos(q[4])+p['M_B']*p['x_BG']*qd[3]**2*cos(q[3])*cos(q[4])**3-2*p['M_B']*p['x_BG']*qd[3]*qd[4]*sin(q[3])*sin(q[4])+p['M_B']*p['x_BG']*qd[4]**2*cos(q[3])*cos(q[4])-p['M_B']*p['y_BG']*qd[2]*qd[3]*sin(q[4])**2*cos(q[3])**2*cos(q[4])-p['M_B']*p['y_BG']*qd[2]*qd[3]*cos(q[3])**2*cos(q[4])**3+p['M_B']*p['y_BG']*qd[2]*qd[3]*cos(q[3])**2*cos(q[4])-p['M_B']*p['y_BG']*qd[3]**2*sin(q[4])**3*cos(q[3])-p['M_B']*p['y_BG']*qd[3]**2*sin(q[4])*cos(q[3])*cos(q[4])**2-2*p['M_B']*p['y_BG']*qd[3]*qd[4]*sin(q[3])*cos(q[4])-p['M_B']*p['y_BG']*qd[4]**2*sin(q[4])*cos(q[3])+p['M_B']*p['z_BG']*qd[3]**2*sin(q[3])*sin(q[4])**2+p['M_B']*p['z_BG']*qd[3]**2*sin(q[3])*cos(q[4])**2
    FF[1,0] = p['M_B']*p['x_BG']*qd[2]**2*sin(q[2])*sin(q[3])**3*cos(q[4])+p['M_B']*p['x_BG']*qd[2]**2*sin(q[2])*sin(q[3])*cos(q[3])**2*cos(q[4])+p['M_B']*p['x_BG']*qd[2]**2*sin(q[3])**2*sin(q[4])*cos(q[2])+p['M_B']*p['x_BG']*qd[2]**2*sin(q[4])**3*cos(q[2])*cos(q[3])**2+p['M_B']*p['x_BG']*qd[2]**2*sin(q[4])*cos(q[2])*cos(q[3])**2*cos(q[4])**2-p['M_B']*p['x_BG']*qd[2]*qd[3]*sin(q[2])*sin(q[3])*sin(q[4])**3*cos(q[3])-p['M_B']*p['x_BG']*qd[2]*qd[3]*sin(q[2])*sin(q[3])*sin(q[4])*cos(q[3])*cos(q[4])**2+p['M_B']*p['x_BG']*qd[2]*qd[3]*sin(q[2])*sin(q[3])*sin(q[4])*cos(q[3])-p['M_B']*p['x_BG']*qd[2]*qd[3]*sin(q[4])**2*cos(q[2])*cos(q[3])*cos(q[4])-p['M_B']*p['x_BG']*qd[2]*qd[3]*cos(q[2])*cos(q[3])*cos(q[4])**3-p['M_B']*p['x_BG']*qd[2]*qd[3]*cos(q[2])*cos(q[3])*cos(q[4])+2*p['M_B']*p['x_BG']*qd[2]*qd[4]*sin(q[2])*sin(q[3])**2*cos(q[4])+2*p['M_B']*p['x_BG']*qd[2]*qd[4]*sin(q[2])*cos(q[3])**2*cos(q[4])+2*p['M_B']*p['x_BG']*qd[2]*qd[4]*sin(q[3])*sin(q[4])*cos(q[2])+p['M_B']*p['x_BG']*qd[3]**2*sin(q[2])*sin(q[3])*sin(q[4])**2*cos(q[4])+p['M_B']*p['x_BG']*qd[3]**2*sin(q[2])*sin(q[3])*cos(q[4])**3+2*p['M_B']*p['x_BG']*qd[3]*qd[4]*sin(q[2])*sin(q[4])*cos(q[3])+p['M_B']*p['x_BG']*qd[4]**2*sin(q[2])*sin(q[3])*cos(q[4])+p['M_B']*p['x_BG']*qd[4]**2*sin(q[4])*cos(q[2])-p['M_B']*p['y_BG']*qd[2]**2*sin(q[2])*sin(q[3])**3*sin(q[4])-p['M_B']*p['y_BG']*qd[2]**2*sin(q[2])*sin(q[3])*sin(q[4])*cos(q[3])**2+p['M_B']*p['y_BG']*qd[2]**2*sin(q[3])**2*cos(q[2])*cos(q[4])+p['M_B']*p['y_BG']*qd[2]**2*sin(q[4])**2*cos(q[2])*cos(q[3])**2*cos(q[4])+p['M_B']*p['y_BG']*qd[2]**2*cos(q[2])*cos(q[3])**2*cos(q[4])**3-p['M_B']*p['y_BG']*qd[2]*qd[3]*sin(q[2])*sin(q[3])*sin(q[4])**2*cos(q[3])*cos(q[4])-p['M_B']*p['y_BG']*qd[2]*qd[3]*sin(q[2])*sin(q[3])*cos(q[3])*cos(q[4])**3+p['M_B']*p['y_BG']*qd[2]*qd[3]*sin(q[2])*sin(q[3])*cos(q[3])*cos(q[4])+p['M_B']*p['y_BG']*qd[2]*qd[3]*sin(q[4])**3*cos(q[2])*cos(q[3])+p['M_B']*p['y_BG']*qd[2]*qd[3]*sin(q[4])*cos(q[2])*cos(q[3])*cos(q[4])**2+p['M_B']*p['y_BG']*qd[2]*qd[3]*sin(q[4])*cos(q[2])*cos(q[3])-2*p['M_B']*p['y_BG']*qd[2]*qd[4]*sin(q[2])*sin(q[3])**2*sin(q[4])-2*p['M_B']*p['y_BG']*qd[2]*qd[4]*sin(q[2])*sin(q[4])*cos(q[3])**2+2*p['M_B']*p['y_BG']*qd[2]*qd[4]*sin(q[3])*cos(q[2])*cos(q[4])-p['M_B']*p['y_BG']*qd[3]**2*sin(q[2])*sin(q[3])*sin(q[4])**3-p['M_B']*p['y_BG']*qd[3]**2*sin(q[2])*sin(q[3])*sin(q[4])*cos(q[4])**2+2*p['M_B']*p['y_BG']*qd[3]*qd[4]*sin(q[2])*cos(q[3])*cos(q[4])-p['M_B']*p['y_BG']*qd[4]**2*sin(q[2])*sin(q[3])*sin(q[4])+p['M_B']*p['y_BG']*qd[4]**2*cos(q[2])*cos(q[4])-p['M_B']*p['z_BG']*qd[2]**2*sin(q[2])*sin(q[3])**2*sin(q[4])**2*cos(q[3])-p['M_B']*p['z_BG']*qd[2]**2*sin(q[2])*sin(q[3])**2*cos(q[3])*cos(q[4])**2-p['M_B']*p['z_BG']*qd[2]**2*sin(q[2])*sin(q[4])**2*cos(q[3])**3-p['M_B']*p['z_BG']*qd[2]**2*sin(q[2])*cos(q[3])**3*cos(q[4])**2-2*p['M_B']*p['z_BG']*qd[2]*qd[3]*sin(q[3])*sin(q[4])**2*cos(q[2])-2*p['M_B']*p['z_BG']*qd[2]*qd[3]*sin(q[3])*cos(q[2])*cos(q[4])**2-p['M_B']*p['z_BG']*qd[3]**2*sin(q[2])*sin(q[4])**2*cos(q[3])-p['M_B']*p['z_BG']*qd[3]**2*sin(q[2])*cos(q[3])*cos(q[4])**2
    FF[2,0] = p['J_xx_B']*qd[2]*qd[3]*sin(q[3])*cos(q[4])+p['J_xx_B']*qd[2]*qd[4]*sin(q[4])*cos(q[3])-p['J_xx_B']*qd[3]*qd[4]*cos(q[4])-p['J_yy_B']*qd[2]**2*sin(q[3])*sin(q[4])*cos(q[3])+p['J_yy_B']*qd[2]*qd[3]*sin(q[3])*cos(q[4])-p['J_yy_B']*qd[2]*qd[4]*sin(q[4])*cos(q[3])+p['J_yy_B']*qd[3]*qd[4]*cos(q[4])+p['J_zz_B']*qd[2]**2*sin(q[3])*sin(q[4])*cos(q[3])-p['J_zz_B']*qd[2]*qd[3]*sin(q[3])*cos(q[4])+p['J_zz_B']*qd[2]*qd[4]*sin(q[4])*cos(q[3])-p['J_zz_B']*qd[3]*qd[4]*cos(q[4])-p['M_B']*p['g']*p['y_BG']*cos(q[2])*cos(q[3])+p['M_B']*p['g']*p['z_BG']*sin(q[2])*cos(q[4])+p['M_B']*p['g']*p['z_BG']*sin(q[3])*sin(q[4])*cos(q[2])
    FF[3,0] = -p['J_xx_B']*qd[2]**2*sin(q[3])*cos(q[3])*cos(q[4])-p['J_xx_B']*qd[2]*qd[3]*sin(q[3])*sin(q[4])-p['J_xx_B']*qd[2]*qd[4]*cos(q[3])*cos(q[4])-p['J_xx_B']*qd[3]*qd[4]*sin(q[4])-p['J_yy_B']*qd[2]*qd[3]*sin(q[3])*sin(q[4])+p['J_yy_B']*qd[2]*qd[4]*cos(q[3])*cos(q[4])+p['J_yy_B']*qd[3]*qd[4]*sin(q[4])+p['J_zz_B']*qd[2]**2*sin(q[3])*cos(q[3])*cos(q[4])+p['J_zz_B']*qd[2]*qd[3]*sin(q[3])*sin(q[4])+p['J_zz_B']*qd[2]*qd[4]*cos(q[3])*cos(q[4])+p['J_zz_B']*qd[3]*qd[4]*sin(q[4])+p['M_B']*p['g']*p['x_BG']*cos(q[2])*cos(q[3])-p['M_B']*p['g']*p['z_BG']*sin(q[2])*sin(q[4])+p['M_B']*p['g']*p['z_BG']*sin(q[3])*cos(q[2])*cos(q[4])
    FF[4,0] = -p['J_xx_B']*qd[2]**2*sin(q[4])*cos(q[3])**2*cos(q[4])-p['J_xx_B']*qd[2]*qd[3]*sin(q[4])**2*cos(q[3])+p['J_xx_B']*qd[2]*qd[3]*cos(q[3])*cos(q[4])**2+p['J_xx_B']*qd[3]**2*sin(q[4])*cos(q[4])+p['J_yy_B']*qd[2]**2*sin(q[4])*cos(q[3])**2*cos(q[4])+p['J_yy_B']*qd[2]*qd[3]*sin(q[4])**2*cos(q[3])-p['J_yy_B']*qd[2]*qd[3]*cos(q[3])*cos(q[4])**2-p['J_yy_B']*qd[3]**2*sin(q[4])*cos(q[4])-p['J_zz_B']*qd[2]*qd[3]*cos(q[3])-p['M_B']*p['g']*p['x_BG']*sin(q[2])*cos(q[4])-p['M_B']*p['g']*p['x_BG']*sin(q[3])*sin(q[4])*cos(q[2])+p['M_B']*p['g']*p['y_BG']*sin(q[2])*sin(q[4])-p['M_B']*p['g']*p['y_BG']*sin(q[3])*cos(q[2])*cos(q[4])
    return FF

def mass_matrix(q=None,p=None,z=None):
    """ Non linear mass matrix 
     q:  degrees of freedom, array-like: ['x(t)', 'y(t)', 'phi_x(t)', 'phi_y(t)', 'phi_z(t)']
     p:  parameters, dictionary with keys: ['J_xx_B', 'J_yy_B', 'J_zz_B', 'M_B', 'x_BG', 'y_BG', 'z_BG']
    """
    if z is not None:
        q  = z[0:int(len(z)/2)] 
    MM = np.zeros((5,5))
    MM[0,0] = p['M_B']
    MM[0,1] = 0
    MM[0,2] = 0
    MM[0,3] = -p['M_B']*p['x_BG']*sin(q[3])*cos(q[4])+p['M_B']*p['y_BG']*sin(q[3])*sin(q[4])+p['M_B']*p['z_BG']*sin(q[4])**2*cos(q[3])+p['M_B']*p['z_BG']*cos(q[3])*cos(q[4])**2
    MM[0,4] = -p['M_B']*p['x_BG']*sin(q[4])*cos(q[3])-p['M_B']*p['y_BG']*cos(q[3])*cos(q[4])
    MM[1,0] = 0
    MM[1,1] = p['M_B']
    MM[1,2] = -p['M_B']*p['x_BG']*sin(q[2])*sin(q[3])**2*sin(q[4])-p['M_B']*p['x_BG']*sin(q[2])*sin(q[4])*cos(q[3])**2+p['M_B']*p['x_BG']*sin(q[3])*cos(q[2])*cos(q[4])-p['M_B']*p['y_BG']*sin(q[2])*sin(q[3])**2*cos(q[4])-p['M_B']*p['y_BG']*sin(q[2])*cos(q[3])**2*cos(q[4])-p['M_B']*p['y_BG']*sin(q[3])*sin(q[4])*cos(q[2])-p['M_B']*p['z_BG']*sin(q[4])**2*cos(q[2])*cos(q[3])-p['M_B']*p['z_BG']*cos(q[2])*cos(q[3])*cos(q[4])**2
    MM[1,3] = p['M_B']*p['x_BG']*sin(q[2])*cos(q[3])*cos(q[4])-p['M_B']*p['y_BG']*sin(q[2])*sin(q[4])*cos(q[3])+p['M_B']*p['z_BG']*sin(q[2])*sin(q[3])*sin(q[4])**2+p['M_B']*p['z_BG']*sin(q[2])*sin(q[3])*cos(q[4])**2
    MM[1,4] = -p['M_B']*p['x_BG']*sin(q[2])*sin(q[3])*sin(q[4])+p['M_B']*p['x_BG']*cos(q[2])*cos(q[4])-p['M_B']*p['y_BG']*sin(q[2])*sin(q[3])*cos(q[4])-p['M_B']*p['y_BG']*sin(q[4])*cos(q[2])
    MM[2,0] = p['M_B']*p['y_BG']*sin(q[3])+p['M_B']*p['z_BG']*sin(q[4])*cos(q[3])
    MM[2,1] = -p['M_B']*p['y_BG']*sin(q[2])*cos(q[3])+p['M_B']*p['z_BG']*sin(q[2])*sin(q[3])*sin(q[4])-p['M_B']*p['z_BG']*cos(q[2])*cos(q[4])
    MM[2,2] = p['J_xx_B']*cos(q[3])*cos(q[4])
    MM[2,3] = p['J_xx_B']*sin(q[4])
    MM[2,4] = 0
    MM[3,0] = -p['M_B']*p['x_BG']*sin(q[3])+p['M_B']*p['z_BG']*cos(q[3])*cos(q[4])
    MM[3,1] = p['M_B']*p['x_BG']*sin(q[2])*cos(q[3])+p['M_B']*p['z_BG']*sin(q[2])*sin(q[3])*cos(q[4])+p['M_B']*p['z_BG']*sin(q[4])*cos(q[2])
    MM[3,2] = -p['J_yy_B']*sin(q[4])*cos(q[3])
    MM[3,3] = p['J_yy_B']*cos(q[4])
    MM[3,4] = 0
    MM[4,0] = -p['M_B']*p['x_BG']*sin(q[4])*cos(q[3])-p['M_B']*p['y_BG']*cos(q[3])*cos(q[4])
    MM[4,1] = -p['M_B']*p['x_BG']*sin(q[2])*sin(q[3])*sin(q[4])+p['M_B']*p['x_BG']*cos(q[2])*cos(q[4])-p['M_B']*p['y_BG']*sin(q[2])*sin(q[3])*cos(q[4])-p['M_B']*p['y_BG']*sin(q[4])*cos(q[2])
    MM[4,2] = p['J_zz_B']*sin(q[3])
    MM[4,3] = 0
    MM[4,4] = p['J_zz_B']
    return MM

def M_lin(q=None,p=None,z=None):
    """ Linear mass matrix 
    q:  degrees of freedom at operating point, array-like: ['x(t)', 'y(t)', 'phi_x(t)', 'phi_y(t)', 'phi_z(t)']
    p:  parameters, dictionary with keys: ['J_xx_B', 'J_yy_B', 'J_zz_B', 'M_B', 'x_BG', 'y_BG', 'z_BG']
    """
    if z is not None:
        q  = z[0:int(len(z)/2)] 
    MM = np.zeros((5,5))
    MM[0,0] = p['M_B']
    MM[0,1] = 0
    MM[0,2] = -p['M_B']*(-p['x_BG']*sin(q[3])+p['z_BG']*cos(q[3])*cos(q[4]))*sin(q[4])*cos(q[3])+p['M_B']*(p['y_BG']*sin(q[3])+p['z_BG']*sin(q[4])*cos(q[3]))*cos(q[3])*cos(q[4])+p['M_B']*(-p['x_BG']*sin(q[4])*cos(q[3])-p['y_BG']*cos(q[3])*cos(q[4]))*sin(q[3])
    MM[0,3] = p['M_B']*(-p['x_BG']*sin(q[3])+p['z_BG']*cos(q[3])*cos(q[4]))*cos(q[4])+p['M_B']*(p['y_BG']*sin(q[3])+p['z_BG']*sin(q[4])*cos(q[3]))*sin(q[4])
    MM[0,4] = p['M_B']*(-p['x_BG']*sin(q[4])*cos(q[3])-p['y_BG']*cos(q[3])*cos(q[4]))
    MM[1,0] = 0
    MM[1,1] = p['M_B']
    MM[1,2] = p['M_B']*(p['x_BG']*(-sin(q[2])*sin(q[3])*sin(q[4])+cos(q[2])*cos(q[4]))-p['y_BG']*(sin(q[2])*sin(q[3])*cos(q[4])+sin(q[4])*cos(q[2])))*sin(q[3])-p['M_B']*(p['x_BG']*sin(q[2])*cos(q[3])+p['z_BG']*(sin(q[2])*sin(q[3])*cos(q[4])+sin(q[4])*cos(q[2])))*sin(q[4])*cos(q[3])+p['M_B']*(-p['y_BG']*sin(q[2])*cos(q[3])-p['z_BG']*(-sin(q[2])*sin(q[3])*sin(q[4])+cos(q[2])*cos(q[4])))*cos(q[3])*cos(q[4])
    MM[1,3] = p['M_B']*(p['x_BG']*sin(q[2])*cos(q[3])+p['z_BG']*(sin(q[2])*sin(q[3])*cos(q[4])+sin(q[4])*cos(q[2])))*cos(q[4])+p['M_B']*(-p['y_BG']*sin(q[2])*cos(q[3])-p['z_BG']*(-sin(q[2])*sin(q[3])*sin(q[4])+cos(q[2])*cos(q[4])))*sin(q[4])
    MM[1,4] = p['M_B']*(p['x_BG']*(-sin(q[2])*sin(q[3])*sin(q[4])+cos(q[2])*cos(q[4]))-p['y_BG']*(sin(q[2])*sin(q[3])*cos(q[4])+sin(q[4])*cos(q[2])))
    MM[2,0] = p['M_B']*(p['y_BG']*sin(q[3])+p['z_BG']*sin(q[4])*cos(q[3]))
    MM[2,1] = p['M_B']*(-p['y_BG']*sin(q[2])*cos(q[3])-p['z_BG']*(-sin(q[2])*sin(q[3])*sin(q[4])+cos(q[2])*cos(q[4])))
    MM[2,2] = p['J_xx_B']*cos(q[3])*cos(q[4])
    MM[2,3] = p['J_xx_B']*sin(q[4])
    MM[2,4] = 0
    MM[3,0] = p['M_B']*(-p['x_BG']*sin(q[3])+p['z_BG']*cos(q[3])*cos(q[4]))
    MM[3,1] = p['M_B']*(p['x_BG']*sin(q[2])*cos(q[3])+p['z_BG']*(sin(q[2])*sin(q[3])*cos(q[4])+sin(q[4])*cos(q[2])))
    MM[3,2] = -p['J_yy_B']*sin(q[4])*cos(q[3])
    MM[3,3] = p['J_yy_B']*cos(q[4])
    MM[3,4] = 0
    MM[4,0] = p['M_B']*(-p['x_BG']*sin(q[4])*cos(q[3])-p['y_BG']*cos(q[3])*cos(q[4]))
    MM[4,1] = p['M_B']*(p['x_BG']*(-sin(q[2])*sin(q[3])*sin(q[4])+cos(q[2])*cos(q[4]))-p['y_BG']*(sin(q[2])*sin(q[3])*cos(q[4])+sin(q[4])*cos(q[2])))
    MM[4,2] = p['J_zz_B']*sin(q[3])
    MM[4,3] = 0
    MM[4,4] = p['J_zz_B']
    return MM

def C_lin(q=None,qd=None,p=None,u=None,z=None):
    """ Linear damping matrix 
    q:  degrees of freedom at operating point, array-like: ['x(t)', 'y(t)', 'phi_x(t)', 'phi_y(t)', 'phi_z(t)']
    qd: dof velocities at operating point, array-like
    p:  parameters, dictionary with keys: ['J_xx_B', 'J_yy_B', 'J_zz_B', 'M_B', 'x_BG', 'y_BG', 'z_BG']
    u:  inputs at operating point, dictionary with keys: []
           where each values is a constant!
    """
    if z is not None:
        q  = z[0:int(len(z)/2)] 
        qd = z[int(len(z)/2): ] 
    CC = np.zeros((5,5))
    CC[0,0] = 0
    CC[0,1] = 0
    CC[0,2] = p['M_B']*qd[3]*(-p['x_BG']*sin(q[4])*cos(q[3])-p['y_BG']*cos(q[3])*cos(q[4]))*cos(q[3])+p['M_B']*(-p['x_BG']*sin(q[3])+p['z_BG']*cos(q[3])*cos(q[4]))*(qd[3]*sin(q[3])*sin(q[4])-qd[4]*cos(q[3])*cos(q[4]))+p['M_B']*(p['y_BG']*sin(q[3])+p['z_BG']*sin(q[4])*cos(q[3]))*(-qd[3]*sin(q[3])*cos(q[4])-qd[4]*sin(q[4])*cos(q[3]))+p['M_B']*((-p['x_BG']*(qd[2]*sin(q[3])+qd[4])+p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[3])-(-p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[4])*cos(q[3])+(-p['x_BG']*sin(q[3])+p['z_BG']*cos(q[3])*cos(q[4]))*(qd[2]*sin(q[3])+qd[4])+(p['x_BG']*sin(q[4])*cos(q[3])+p['y_BG']*cos(q[3])*cos(q[4]))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*cos(q[3])*cos(q[4])+p['M_B']*((p['x_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*cos(q[3])*cos(q[4])+(p['x_BG']*sin(q[3])-p['z_BG']*cos(q[3])*cos(q[4]))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))-(p['y_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*sin(q[4])*cos(q[3])+(p['y_BG']*sin(q[3])+p['z_BG']*sin(q[4])*cos(q[3]))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*sin(q[3])-p['M_B']*((p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))-p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*cos(q[3])*cos(q[4])+(-p['y_BG']*(qd[2]*sin(q[3])+qd[4])+p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*sin(q[3])+(-p['y_BG']*sin(q[3])-p['z_BG']*sin(q[4])*cos(q[3]))*(qd[2]*sin(q[3])+qd[4])+(-p['x_BG']*sin(q[4])*cos(q[3])-p['y_BG']*cos(q[3])*cos(q[4]))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[4])*cos(q[3])
    CC[0,3] = p['M_B']*qd[2]*(-p['x_BG']*sin(q[4])*cos(q[3])-p['y_BG']*cos(q[3])*cos(q[4]))*cos(q[3])+p['M_B']*(-p['x_BG']*sin(q[3])+p['z_BG']*cos(q[3])*cos(q[4]))*(qd[2]*sin(q[3])*sin(q[4])-qd[4]*sin(q[4]))+p['M_B']*(p['y_BG']*sin(q[3])+p['z_BG']*sin(q[4])*cos(q[3]))*(-qd[2]*sin(q[3])*cos(q[4])+qd[4]*cos(q[4]))+p['M_B']*(p['z_BG']*(qd[2]*sin(q[3])+qd[4])*sin(q[4])+(-p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*cos(q[4])+(-p['x_BG']*cos(q[4])+p['y_BG']*sin(q[4]))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*cos(q[3])*cos(q[4])-p['M_B']*(p['z_BG']*(qd[2]*sin(q[3])+qd[4])*cos(q[4])+(p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))-p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[4])+(p['x_BG']*cos(q[4])-p['y_BG']*sin(q[4]))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[4])*cos(q[3])+p['M_B']*(-p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))*cos(q[4])-p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))*sin(q[4])+(p['x_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[4])+(p['y_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*cos(q[4]))*sin(q[3])
    CC[0,4] = p['M_B']*(-2*p['x_BG']*(qd[2]*sin(q[3])+qd[4])+p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*cos(q[3])*cos(q[4])+p['M_B']*(p['x_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))+p['y_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*sin(q[3])+p['M_B']*(-p['x_BG']*sin(q[3])+p['z_BG']*cos(q[3])*cos(q[4]))*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4]))-p['M_B']*(-2*p['y_BG']*(qd[2]*sin(q[3])+qd[4])+p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*sin(q[4])*cos(q[3])+p['M_B']*(p['y_BG']*sin(q[3])+p['z_BG']*sin(q[4])*cos(q[3]))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))
    CC[1,0] = 0
    CC[1,1] = 0
    CC[1,2] = p['M_B']*qd[3]*(p['x_BG']*(-sin(q[2])*sin(q[3])*sin(q[4])+cos(q[2])*cos(q[4]))-p['y_BG']*(sin(q[2])*sin(q[3])*cos(q[4])+sin(q[4])*cos(q[2])))*cos(q[3])+p['M_B']*(p['x_BG']*sin(q[2])*cos(q[3])+p['z_BG']*(sin(q[2])*sin(q[3])*cos(q[4])+sin(q[4])*cos(q[2])))*(qd[3]*sin(q[3])*sin(q[4])-qd[4]*cos(q[3])*cos(q[4]))+p['M_B']*(-p['y_BG']*sin(q[2])*cos(q[3])-p['z_BG']*(-sin(q[2])*sin(q[3])*sin(q[4])+cos(q[2])*cos(q[4])))*(-qd[3]*sin(q[3])*cos(q[4])-qd[4]*sin(q[4])*cos(q[3]))+p['M_B']*(-sin(q[2])*sin(q[3])*sin(q[4])+cos(q[2])*cos(q[4]))*((p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))-p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*cos(q[3])*cos(q[4])+(-p['y_BG']*(qd[2]*sin(q[3])+qd[4])+p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*sin(q[3])+(-p['y_BG']*sin(q[3])-p['z_BG']*sin(q[4])*cos(q[3]))*(qd[2]*sin(q[3])+qd[4])+(-p['x_BG']*sin(q[4])*cos(q[3])-p['y_BG']*cos(q[3])*cos(q[4]))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))+p['M_B']*(sin(q[2])*sin(q[3])*cos(q[4])+sin(q[4])*cos(q[2]))*((-p['x_BG']*(qd[2]*sin(q[3])+qd[4])+p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[3])-(-p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[4])*cos(q[3])+(-p['x_BG']*sin(q[3])+p['z_BG']*cos(q[3])*cos(q[4]))*(qd[2]*sin(q[3])+qd[4])+(p['x_BG']*sin(q[4])*cos(q[3])+p['y_BG']*cos(q[3])*cos(q[4]))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))-p['M_B']*((p['x_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*cos(q[3])*cos(q[4])+(p['x_BG']*sin(q[3])-p['z_BG']*cos(q[3])*cos(q[4]))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))-(p['y_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*sin(q[4])*cos(q[3])+(p['y_BG']*sin(q[3])+p['z_BG']*sin(q[4])*cos(q[3]))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*sin(q[2])*cos(q[3])
    CC[1,3] = p['M_B']*qd[2]*(p['x_BG']*(-sin(q[2])*sin(q[3])*sin(q[4])+cos(q[2])*cos(q[4]))-p['y_BG']*(sin(q[2])*sin(q[3])*cos(q[4])+sin(q[4])*cos(q[2])))*cos(q[3])+p['M_B']*(p['x_BG']*sin(q[2])*cos(q[3])+p['z_BG']*(sin(q[2])*sin(q[3])*cos(q[4])+sin(q[4])*cos(q[2])))*(qd[2]*sin(q[3])*sin(q[4])-qd[4]*sin(q[4]))+p['M_B']*(-p['y_BG']*sin(q[2])*cos(q[3])-p['z_BG']*(-sin(q[2])*sin(q[3])*sin(q[4])+cos(q[2])*cos(q[4])))*(-qd[2]*sin(q[3])*cos(q[4])+qd[4]*cos(q[4]))+p['M_B']*(-sin(q[2])*sin(q[3])*sin(q[4])+cos(q[2])*cos(q[4]))*(p['z_BG']*(qd[2]*sin(q[3])+qd[4])*cos(q[4])+(p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))-p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[4])+(p['x_BG']*cos(q[4])-p['y_BG']*sin(q[4]))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))+p['M_B']*(sin(q[2])*sin(q[3])*cos(q[4])+sin(q[4])*cos(q[2]))*(p['z_BG']*(qd[2]*sin(q[3])+qd[4])*sin(q[4])+(-p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*cos(q[4])+(-p['x_BG']*cos(q[4])+p['y_BG']*sin(q[4]))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))-p['M_B']*(-p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))*cos(q[4])-p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))*sin(q[4])+(p['x_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[4])+(p['y_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*cos(q[4]))*sin(q[2])*cos(q[3])
    CC[1,4] = p['M_B']*(-2*p['x_BG']*(qd[2]*sin(q[3])+qd[4])+p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*(sin(q[2])*sin(q[3])*cos(q[4])+sin(q[4])*cos(q[2]))-p['M_B']*(p['x_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))+p['y_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*sin(q[2])*cos(q[3])+p['M_B']*(-2*p['y_BG']*(qd[2]*sin(q[3])+qd[4])+p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*(-sin(q[2])*sin(q[3])*sin(q[4])+cos(q[2])*cos(q[4]))+p['M_B']*(p['x_BG']*sin(q[2])*cos(q[3])+p['z_BG']*(sin(q[2])*sin(q[3])*cos(q[4])+sin(q[4])*cos(q[2])))*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4]))+p['M_B']*(-p['y_BG']*sin(q[2])*cos(q[3])-p['z_BG']*(-sin(q[2])*sin(q[3])*sin(q[4])+cos(q[2])*cos(q[4])))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))
    CC[2,0] = 0
    CC[2,1] = 0
    CC[2,2] = p['J_xx_B']*(-qd[3]*sin(q[3])*cos(q[4])-qd[4]*sin(q[4])*cos(q[3]))+p['M_B']*p['y_BG']*((p['x_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*cos(q[3])*cos(q[4])+(p['x_BG']*sin(q[3])-p['z_BG']*cos(q[3])*cos(q[4]))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))-(p['y_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*sin(q[4])*cos(q[3])+(p['y_BG']*sin(q[3])+p['z_BG']*sin(q[4])*cos(q[3]))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))-p['M_B']*p['z_BG']*((p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))-p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*cos(q[3])*cos(q[4])+(-p['y_BG']*(qd[2]*sin(q[3])+qd[4])+p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*sin(q[3])+(-p['y_BG']*sin(q[3])-p['z_BG']*sin(q[4])*cos(q[3]))*(qd[2]*sin(q[3])+qd[4])+(-p['x_BG']*sin(q[4])*cos(q[3])-p['y_BG']*cos(q[3])*cos(q[4]))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))-(qd[2]*sin(q[3])+qd[4])*(p['M_B']*p['x_BG']*p['y_BG']*cos(q[3])*cos(q[4])+p['M_B']*p['y_BG']*p['z_BG']*sin(q[3])-(p['J_yy_B']-p['M_B']*(p['x_BG']**2+p['z_BG']**2))*sin(q[4])*cos(q[3]))-(qd[2]*sin(q[4])*cos(q[3])-qd[3]*cos(q[4]))*(p['M_B']*p['x_BG']*p['z_BG']*cos(q[3])*cos(q[4])-p['M_B']*p['y_BG']*p['z_BG']*sin(q[4])*cos(q[3])+(p['J_zz_B']-p['M_B']*(p['x_BG']**2+p['y_BG']**2))*sin(q[3]))-(p['M_B']*p['x_BG']*p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))+p['M_B']*p['y_BG']*p['z_BG']*(qd[2]*sin(q[3])+qd[4])+(p['J_yy_B']-p['M_B']*(p['x_BG']**2+p['z_BG']**2))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*sin(q[3])-(p['M_B']*p['x_BG']*p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))+p['M_B']*p['y_BG']*p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+(p['J_zz_B']-p['M_B']*(p['x_BG']**2+p['y_BG']**2))*(qd[2]*sin(q[3])+qd[4]))*sin(q[4])*cos(q[3])
    CC[2,3] = p['J_xx_B']*(-qd[2]*sin(q[3])*cos(q[4])+qd[4]*cos(q[4]))+p['M_B']*p['y_BG']*(-p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))*cos(q[4])-p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))*sin(q[4])+(p['x_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[4])+(p['y_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*cos(q[4]))-p['M_B']*p['z_BG']*(p['z_BG']*(qd[2]*sin(q[3])+qd[4])*cos(q[4])+(p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))-p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[4])+(p['x_BG']*cos(q[4])-p['y_BG']*sin(q[4]))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))-(qd[2]*sin(q[3])+qd[4])*(p['M_B']*p['x_BG']*p['y_BG']*sin(q[4])+(p['J_yy_B']-p['M_B']*(p['x_BG']**2+p['z_BG']**2))*cos(q[4]))-(qd[2]*sin(q[4])*cos(q[3])-qd[3]*cos(q[4]))*(p['M_B']*p['x_BG']*p['z_BG']*sin(q[4])+p['M_B']*p['y_BG']*p['z_BG']*cos(q[4]))+(p['M_B']*p['x_BG']*p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))+p['M_B']*p['y_BG']*p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+(p['J_zz_B']-p['M_B']*(p['x_BG']**2+p['y_BG']**2))*(qd[2]*sin(q[3])+qd[4]))*cos(q[4])
    CC[2,4] = p['J_xx_B']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))-p['M_B']*p['x_BG']*p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))-2*p['M_B']*p['y_BG']*p['z_BG']*(qd[2]*sin(q[3])+qd[4])+p['M_B']*p['y_BG']*(p['x_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))+p['y_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))-p['M_B']*p['z_BG']*(-2*p['y_BG']*(qd[2]*sin(q[3])+qd[4])+p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))-(p['J_yy_B']-p['M_B']*(p['x_BG']**2+p['z_BG']**2))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))-(p['J_zz_B']-p['M_B']*(p['x_BG']**2+p['y_BG']**2))*(qd[2]*sin(q[4])*cos(q[3])-qd[3]*cos(q[4]))
    CC[3,0] = 0
    CC[3,1] = 0
    CC[3,2] = p['J_yy_B']*(qd[3]*sin(q[3])*sin(q[4])-qd[4]*cos(q[3])*cos(q[4]))-p['M_B']*p['x_BG']*((p['x_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*cos(q[3])*cos(q[4])+(p['x_BG']*sin(q[3])-p['z_BG']*cos(q[3])*cos(q[4]))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))-(p['y_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*sin(q[4])*cos(q[3])+(p['y_BG']*sin(q[3])+p['z_BG']*sin(q[4])*cos(q[3]))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))+p['M_B']*p['z_BG']*((-p['x_BG']*(qd[2]*sin(q[3])+qd[4])+p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[3])-(-p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[4])*cos(q[3])+(-p['x_BG']*sin(q[3])+p['z_BG']*cos(q[3])*cos(q[4]))*(qd[2]*sin(q[3])+qd[4])+(p['x_BG']*sin(q[4])*cos(q[3])+p['y_BG']*cos(q[3])*cos(q[4]))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))-(-qd[2]*sin(q[3])-qd[4])*(-p['M_B']*p['x_BG']*p['y_BG']*sin(q[4])*cos(q[3])+p['M_B']*p['x_BG']*p['z_BG']*sin(q[3])+(p['J_xx_B']-p['M_B']*(p['y_BG']**2+p['z_BG']**2))*cos(q[3])*cos(q[4]))-(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))*(p['M_B']*p['x_BG']*p['z_BG']*cos(q[3])*cos(q[4])-p['M_B']*p['y_BG']*p['z_BG']*sin(q[4])*cos(q[3])+(p['J_zz_B']-p['M_B']*(p['x_BG']**2+p['y_BG']**2))*sin(q[3]))+(p['M_B']*p['x_BG']*p['y_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['M_B']*p['x_BG']*p['z_BG']*(qd[2]*sin(q[3])+qd[4])+(p['J_xx_B']-p['M_B']*(p['y_BG']**2+p['z_BG']**2))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[3])-(p['M_B']*p['x_BG']*p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))+p['M_B']*p['y_BG']*p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+(p['J_zz_B']-p['M_B']*(p['x_BG']**2+p['y_BG']**2))*(qd[2]*sin(q[3])+qd[4]))*cos(q[3])*cos(q[4])
    CC[3,3] = p['J_yy_B']*(qd[2]*sin(q[3])*sin(q[4])-qd[4]*sin(q[4]))-p['M_B']*p['x_BG']*(-p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))*cos(q[4])-p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))*sin(q[4])+(p['x_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[4])+(p['y_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*cos(q[4]))+p['M_B']*p['z_BG']*(p['z_BG']*(qd[2]*sin(q[3])+qd[4])*sin(q[4])+(-p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*cos(q[4])+(-p['x_BG']*cos(q[4])+p['y_BG']*sin(q[4]))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))-(-qd[2]*sin(q[3])-qd[4])*(p['M_B']*p['x_BG']*p['y_BG']*cos(q[4])+(p['J_xx_B']-p['M_B']*(p['y_BG']**2+p['z_BG']**2))*sin(q[4]))-(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))*(p['M_B']*p['x_BG']*p['z_BG']*sin(q[4])+p['M_B']*p['y_BG']*p['z_BG']*cos(q[4]))-(p['M_B']*p['x_BG']*p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))+p['M_B']*p['y_BG']*p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+(p['J_zz_B']-p['M_B']*(p['x_BG']**2+p['y_BG']**2))*(qd[2]*sin(q[3])+qd[4]))*sin(q[4])
    CC[3,4] = p['J_yy_B']*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4]))+p['M_B']*p['x_BG']*p['y_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))-p['M_B']*p['x_BG']*p['z_BG']*(-qd[2]*sin(q[3])-qd[4])+p['M_B']*p['x_BG']*p['z_BG']*(qd[2]*sin(q[3])+qd[4])-p['M_B']*p['x_BG']*(p['x_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))+p['y_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))+p['M_B']*p['z_BG']*(-2*p['x_BG']*(qd[2]*sin(q[3])+qd[4])+p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))+(p['J_xx_B']-p['M_B']*(p['y_BG']**2+p['z_BG']**2))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))-(p['J_zz_B']-p['M_B']*(p['x_BG']**2+p['y_BG']**2))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))
    CC[4,0] = 0
    CC[4,1] = 0
    CC[4,2] = p['J_zz_B']*qd[3]*cos(q[3])+p['M_B']*p['x_BG']*((p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))-p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*cos(q[3])*cos(q[4])+(-p['y_BG']*(qd[2]*sin(q[3])+qd[4])+p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*sin(q[3])+(-p['y_BG']*sin(q[3])-p['z_BG']*sin(q[4])*cos(q[3]))*(qd[2]*sin(q[3])+qd[4])+(-p['x_BG']*sin(q[4])*cos(q[3])-p['y_BG']*cos(q[3])*cos(q[4]))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))-p['M_B']*p['y_BG']*((-p['x_BG']*(qd[2]*sin(q[3])+qd[4])+p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[3])-(-p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[4])*cos(q[3])+(-p['x_BG']*sin(q[3])+p['z_BG']*cos(q[3])*cos(q[4]))*(qd[2]*sin(q[3])+qd[4])+(p['x_BG']*sin(q[4])*cos(q[3])+p['y_BG']*cos(q[3])*cos(q[4]))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))-(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))*(-p['M_B']*p['x_BG']*p['y_BG']*sin(q[4])*cos(q[3])+p['M_B']*p['x_BG']*p['z_BG']*sin(q[3])+(p['J_xx_B']-p['M_B']*(p['y_BG']**2+p['z_BG']**2))*cos(q[3])*cos(q[4]))-(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4]))*(p['M_B']*p['x_BG']*p['y_BG']*cos(q[3])*cos(q[4])+p['M_B']*p['y_BG']*p['z_BG']*sin(q[3])-(p['J_yy_B']-p['M_B']*(p['x_BG']**2+p['z_BG']**2))*sin(q[4])*cos(q[3]))+(p['M_B']*p['x_BG']*p['y_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['M_B']*p['x_BG']*p['z_BG']*(qd[2]*sin(q[3])+qd[4])+(p['J_xx_B']-p['M_B']*(p['y_BG']**2+p['z_BG']**2))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[4])*cos(q[3])+(p['M_B']*p['x_BG']*p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))+p['M_B']*p['y_BG']*p['z_BG']*(qd[2]*sin(q[3])+qd[4])+(p['J_yy_B']-p['M_B']*(p['x_BG']**2+p['z_BG']**2))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*cos(q[3])*cos(q[4])
    CC[4,3] = p['J_zz_B']*qd[2]*cos(q[3])+p['M_B']*p['x_BG']*(p['z_BG']*(qd[2]*sin(q[3])+qd[4])*cos(q[4])+(p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))-p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[4])+(p['x_BG']*cos(q[4])-p['y_BG']*sin(q[4]))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))-p['M_B']*p['y_BG']*(p['z_BG']*(qd[2]*sin(q[3])+qd[4])*sin(q[4])+(-p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*cos(q[4])+(-p['x_BG']*cos(q[4])+p['y_BG']*sin(q[4]))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))-(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))*(p['M_B']*p['x_BG']*p['y_BG']*cos(q[4])+(p['J_xx_B']-p['M_B']*(p['y_BG']**2+p['z_BG']**2))*sin(q[4]))-(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4]))*(p['M_B']*p['x_BG']*p['y_BG']*sin(q[4])+(p['J_yy_B']-p['M_B']*(p['x_BG']**2+p['z_BG']**2))*cos(q[4]))-(p['M_B']*p['x_BG']*p['y_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['M_B']*p['x_BG']*p['z_BG']*(qd[2]*sin(q[3])+qd[4])+(p['J_xx_B']-p['M_B']*(p['y_BG']**2+p['z_BG']**2))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*cos(q[4])+(p['M_B']*p['x_BG']*p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))+p['M_B']*p['y_BG']*p['z_BG']*(qd[2]*sin(q[3])+qd[4])+(p['J_yy_B']-p['M_B']*(p['x_BG']**2+p['z_BG']**2))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*sin(q[4])
    CC[4,4] = -p['M_B']*p['x_BG']*p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['M_B']*p['x_BG']*(-2*p['y_BG']*(qd[2]*sin(q[3])+qd[4])+p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))-p['M_B']*p['y_BG']*p['z_BG']*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4]))-p['M_B']*p['y_BG']*(-2*p['x_BG']*(qd[2]*sin(q[3])+qd[4])+p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))
    return CC

def K_lin(q=None,qd=None,p=None,u=None,z=None):
    """ Linear stiffness matrix 
    q:  degrees of freedom, array-like: ['x(t)', 'y(t)', 'phi_x(t)', 'phi_y(t)', 'phi_z(t)']
    qd: dof velocities, array-like
    p:  parameters, dictionary with keys: ['J_xx_B', 'J_yy_B', 'J_zz_B', 'M_B', 'g', 'x_BG', 'y_BG', 'z_BG']
    u:  inputs at operating point, dictionary with keys: []
           where each values is a constant!
    """
    if z is not None:
        q  = z[0:int(len(z)/2)] 
        qd = z[int(len(z)/2): ] 
    KK = np.zeros((5,5))
    KK[0,0] = 0
    KK[0,1] = 0
    KK[0,2] = 0
    KK[0,3] = p['M_B']*qd[2]*qd[3]*(p['x_BG']*sin(q[3])*sin(q[4])+p['y_BG']*sin(q[3])*cos(q[4]))*cos(q[3])-p['M_B']*qd[2]*qd[3]*(-p['x_BG']*sin(q[4])*cos(q[3])-p['y_BG']*cos(q[3])*cos(q[4]))*sin(q[3])+p['M_B']*(-p['x_BG']*sin(q[3])+p['z_BG']*cos(q[3])*cos(q[4]))*(qd[2]*qd[3]*sin(q[4])*cos(q[3])+qd[2]*qd[4]*sin(q[3])*cos(q[4]))+p['M_B']*(-p['x_BG']*cos(q[3])-p['z_BG']*sin(q[3])*cos(q[4]))*(qd[2]*qd[3]*sin(q[3])*sin(q[4])-qd[2]*qd[4]*cos(q[3])*cos(q[4])-qd[3]*qd[4]*sin(q[4]))+p['M_B']*(p['y_BG']*sin(q[3])+p['z_BG']*sin(q[4])*cos(q[3]))*(-qd[2]*qd[3]*cos(q[3])*cos(q[4])+qd[2]*qd[4]*sin(q[3])*sin(q[4]))+p['M_B']*(p['y_BG']*cos(q[3])-p['z_BG']*sin(q[3])*sin(q[4]))*(-qd[2]*qd[3]*sin(q[3])*cos(q[4])-qd[2]*qd[4]*sin(q[4])*cos(q[3])+qd[3]*qd[4]*cos(q[4]))-p['M_B']*(-(p['x_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*(qd[2]*sin(q[3])+qd[4])+(-p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*sin(q[3])*cos(q[4])+p['M_B']*((p['x_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))-(-p['y_BG']*(qd[2]*sin(q[3])+qd[4])+p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*cos(q[3])+p['M_B']*(-(-p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))+(-p['y_BG']*(qd[2]*sin(q[3])+qd[4])+p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*(qd[2]*sin(q[3])+qd[4]))*sin(q[3])*sin(q[4])+p['M_B']*(qd[2]*(-p['x_BG']*(qd[2]*sin(q[3])+qd[4])+p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*cos(q[3])+qd[2]*(-p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[3])*sin(q[4])+(qd[2]*sin(q[3])+qd[4])*(-p['x_BG']*qd[2]*cos(q[3])-p['z_BG']*qd[2]*sin(q[3])*cos(q[4]))+(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))*(-p['x_BG']*qd[2]*sin(q[3])*sin(q[4])-p['y_BG']*qd[2]*sin(q[3])*cos(q[4])))*cos(q[3])*cos(q[4])+p['M_B']*(-qd[2]*(p['x_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[3])*cos(q[4])+qd[2]*(p['y_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*sin(q[3])*sin(q[4])+(p['x_BG']*qd[2]*cos(q[3])+p['z_BG']*qd[2]*sin(q[3])*cos(q[4]))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))+(p['y_BG']*qd[2]*cos(q[3])-p['z_BG']*qd[2]*sin(q[3])*sin(q[4]))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*sin(q[3])-p['M_B']*(-qd[2]*(p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))-p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[3])*cos(q[4])+qd[2]*(-p['y_BG']*(qd[2]*sin(q[3])+qd[4])+p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*cos(q[3])+(qd[2]*sin(q[3])+qd[4])*(-p['y_BG']*qd[2]*cos(q[3])+p['z_BG']*qd[2]*sin(q[3])*sin(q[4]))+(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))*(p['x_BG']*qd[2]*sin(q[3])*sin(q[4])+p['y_BG']*qd[2]*sin(q[3])*cos(q[4])))*sin(q[4])*cos(q[3])
    KK[0,4] = -p['M_B']*p['z_BG']*(qd[2]*qd[3]*sin(q[3])*sin(q[4])-qd[2]*qd[4]*cos(q[3])*cos(q[4])-qd[3]*qd[4]*sin(q[4]))*sin(q[4])*cos(q[3])+p['M_B']*p['z_BG']*(-qd[2]*qd[3]*sin(q[3])*cos(q[4])-qd[2]*qd[4]*sin(q[4])*cos(q[3])+qd[3]*qd[4]*cos(q[4]))*cos(q[3])*cos(q[4])+p['M_B']*qd[2]*qd[3]*(-p['x_BG']*cos(q[3])*cos(q[4])+p['y_BG']*sin(q[4])*cos(q[3]))*cos(q[3])+p['M_B']*(-p['x_BG']*sin(q[3])+p['z_BG']*cos(q[3])*cos(q[4]))*(qd[2]*qd[3]*sin(q[3])*cos(q[4])+qd[2]*qd[4]*sin(q[4])*cos(q[3])-qd[3]*qd[4]*cos(q[4]))+p['M_B']*(p['y_BG']*sin(q[3])+p['z_BG']*sin(q[4])*cos(q[3]))*(qd[2]*qd[3]*sin(q[3])*sin(q[4])-qd[2]*qd[4]*cos(q[3])*cos(q[4])-qd[3]*qd[4]*sin(q[4]))-p['M_B']*(-(p['x_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*(qd[2]*sin(q[3])+qd[4])+(-p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*sin(q[4])*cos(q[3])-p['M_B']*(-(-p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))+(-p['y_BG']*(qd[2]*sin(q[3])+qd[4])+p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*(qd[2]*sin(q[3])+qd[4]))*cos(q[3])*cos(q[4])+p['M_B']*(p['z_BG']*(qd[2]*sin(q[3])+qd[4])*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+(-p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4]))+(-p['x_BG']*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4]))+p['y_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*cos(q[3])*cos(q[4])-p['M_B']*(p['z_BG']*(qd[2]*sin(q[3])+qd[4])*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4]))+(p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))-p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+(p['x_BG']*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4]))-p['y_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[4])*cos(q[3])+p['M_B']*(-p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4]))-p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))+(p['x_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+(p['y_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4])))*sin(q[3])
    KK[1,0] = 0
    KK[1,1] = 0
    KK[1,2] = p['M_B']*qd[2]*qd[3]*(p['x_BG']*(-sin(q[2])*cos(q[4])-sin(q[3])*sin(q[4])*cos(q[2]))-p['y_BG']*(-sin(q[2])*sin(q[4])+sin(q[3])*cos(q[2])*cos(q[4])))*cos(q[3])+p['M_B']*(-(p['x_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*(qd[2]*sin(q[3])+qd[4])+(-p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*(-sin(q[2])*sin(q[4])+sin(q[3])*cos(q[2])*cos(q[4]))-p['M_B']*((p['x_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))-(-p['y_BG']*(qd[2]*sin(q[3])+qd[4])+p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*cos(q[2])*cos(q[3])+p['M_B']*(-(-p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))+(-p['y_BG']*(qd[2]*sin(q[3])+qd[4])+p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*(qd[2]*sin(q[3])+qd[4]))*(-sin(q[2])*cos(q[4])-sin(q[3])*sin(q[4])*cos(q[2]))+p['M_B']*(p['x_BG']*cos(q[2])*cos(q[3])+p['z_BG']*(-sin(q[2])*sin(q[4])+sin(q[3])*cos(q[2])*cos(q[4])))*(qd[2]*qd[3]*sin(q[3])*sin(q[4])-qd[2]*qd[4]*cos(q[3])*cos(q[4])-qd[3]*qd[4]*sin(q[4]))+p['M_B']*(-p['y_BG']*cos(q[2])*cos(q[3])-p['z_BG']*(-sin(q[2])*cos(q[4])-sin(q[3])*sin(q[4])*cos(q[2])))*(-qd[2]*qd[3]*sin(q[3])*cos(q[4])-qd[2]*qd[4]*sin(q[4])*cos(q[3])+qd[3]*qd[4]*cos(q[4]))
    KK[1,3] = -p['M_B']*qd[2]*qd[3]*(p['x_BG']*(-sin(q[2])*sin(q[3])*sin(q[4])+cos(q[2])*cos(q[4]))-p['y_BG']*(sin(q[2])*sin(q[3])*cos(q[4])+sin(q[4])*cos(q[2])))*sin(q[3])+p['M_B']*qd[2]*qd[3]*(-p['x_BG']*sin(q[2])*sin(q[4])*cos(q[3])-p['y_BG']*sin(q[2])*cos(q[3])*cos(q[4]))*cos(q[3])+p['M_B']*(-(p['x_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*(qd[2]*sin(q[3])+qd[4])+(-p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*sin(q[2])*cos(q[3])*cos(q[4])+p['M_B']*((p['x_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))-(-p['y_BG']*(qd[2]*sin(q[3])+qd[4])+p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*sin(q[2])*sin(q[3])-p['M_B']*(-(-p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))+(-p['y_BG']*(qd[2]*sin(q[3])+qd[4])+p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*(qd[2]*sin(q[3])+qd[4]))*sin(q[2])*sin(q[4])*cos(q[3])+p['M_B']*(-p['x_BG']*sin(q[2])*sin(q[3])+p['z_BG']*sin(q[2])*cos(q[3])*cos(q[4]))*(qd[2]*qd[3]*sin(q[3])*sin(q[4])-qd[2]*qd[4]*cos(q[3])*cos(q[4])-qd[3]*qd[4]*sin(q[4]))+p['M_B']*(p['x_BG']*sin(q[2])*cos(q[3])+p['z_BG']*(sin(q[2])*sin(q[3])*cos(q[4])+sin(q[4])*cos(q[2])))*(qd[2]*qd[3]*sin(q[4])*cos(q[3])+qd[2]*qd[4]*sin(q[3])*cos(q[4]))+p['M_B']*(p['y_BG']*sin(q[2])*sin(q[3])+p['z_BG']*sin(q[2])*sin(q[4])*cos(q[3]))*(-qd[2]*qd[3]*sin(q[3])*cos(q[4])-qd[2]*qd[4]*sin(q[4])*cos(q[3])+qd[3]*qd[4]*cos(q[4]))+p['M_B']*(-p['y_BG']*sin(q[2])*cos(q[3])-p['z_BG']*(-sin(q[2])*sin(q[3])*sin(q[4])+cos(q[2])*cos(q[4])))*(-qd[2]*qd[3]*cos(q[3])*cos(q[4])+qd[2]*qd[4]*sin(q[3])*sin(q[4]))+p['M_B']*(-sin(q[2])*sin(q[3])*sin(q[4])+cos(q[2])*cos(q[4]))*(-qd[2]*(p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))-p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[3])*cos(q[4])+qd[2]*(-p['y_BG']*(qd[2]*sin(q[3])+qd[4])+p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*cos(q[3])+(qd[2]*sin(q[3])+qd[4])*(-p['y_BG']*qd[2]*cos(q[3])+p['z_BG']*qd[2]*sin(q[3])*sin(q[4]))+(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))*(p['x_BG']*qd[2]*sin(q[3])*sin(q[4])+p['y_BG']*qd[2]*sin(q[3])*cos(q[4])))+p['M_B']*(sin(q[2])*sin(q[3])*cos(q[4])+sin(q[4])*cos(q[2]))*(qd[2]*(-p['x_BG']*(qd[2]*sin(q[3])+qd[4])+p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*cos(q[3])+qd[2]*(-p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[3])*sin(q[4])+(qd[2]*sin(q[3])+qd[4])*(-p['x_BG']*qd[2]*cos(q[3])-p['z_BG']*qd[2]*sin(q[3])*cos(q[4]))+(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))*(-p['x_BG']*qd[2]*sin(q[3])*sin(q[4])-p['y_BG']*qd[2]*sin(q[3])*cos(q[4])))-p['M_B']*(-qd[2]*(p['x_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[3])*cos(q[4])+qd[2]*(p['y_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*sin(q[3])*sin(q[4])+(p['x_BG']*qd[2]*cos(q[3])+p['z_BG']*qd[2]*sin(q[3])*cos(q[4]))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))+(p['y_BG']*qd[2]*cos(q[3])-p['z_BG']*qd[2]*sin(q[3])*sin(q[4]))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*sin(q[2])*cos(q[3])
    KK[1,4] = p['M_B']*p['z_BG']*(-sin(q[2])*sin(q[3])*sin(q[4])+cos(q[2])*cos(q[4]))*(qd[2]*qd[3]*sin(q[3])*sin(q[4])-qd[2]*qd[4]*cos(q[3])*cos(q[4])-qd[3]*qd[4]*sin(q[4]))-p['M_B']*p['z_BG']*(-sin(q[2])*sin(q[3])*cos(q[4])-sin(q[4])*cos(q[2]))*(-qd[2]*qd[3]*sin(q[3])*cos(q[4])-qd[2]*qd[4]*sin(q[4])*cos(q[3])+qd[3]*qd[4]*cos(q[4]))+p['M_B']*qd[2]*qd[3]*(p['x_BG']*(-sin(q[2])*sin(q[3])*cos(q[4])-sin(q[4])*cos(q[2]))-p['y_BG']*(-sin(q[2])*sin(q[3])*sin(q[4])+cos(q[2])*cos(q[4])))*cos(q[3])+p['M_B']*(-(p['x_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*(qd[2]*sin(q[3])+qd[4])+(-p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*(-sin(q[2])*sin(q[3])*sin(q[4])+cos(q[2])*cos(q[4]))+p['M_B']*(-(-p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))+(-p['y_BG']*(qd[2]*sin(q[3])+qd[4])+p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*(qd[2]*sin(q[3])+qd[4]))*(-sin(q[2])*sin(q[3])*cos(q[4])-sin(q[4])*cos(q[2]))+p['M_B']*(p['x_BG']*sin(q[2])*cos(q[3])+p['z_BG']*(sin(q[2])*sin(q[3])*cos(q[4])+sin(q[4])*cos(q[2])))*(qd[2]*qd[3]*sin(q[3])*cos(q[4])+qd[2]*qd[4]*sin(q[4])*cos(q[3])-qd[3]*qd[4]*cos(q[4]))+p['M_B']*(-p['y_BG']*sin(q[2])*cos(q[3])-p['z_BG']*(-sin(q[2])*sin(q[3])*sin(q[4])+cos(q[2])*cos(q[4])))*(qd[2]*qd[3]*sin(q[3])*sin(q[4])-qd[2]*qd[4]*cos(q[3])*cos(q[4])-qd[3]*qd[4]*sin(q[4]))+p['M_B']*(-sin(q[2])*sin(q[3])*sin(q[4])+cos(q[2])*cos(q[4]))*(p['z_BG']*(qd[2]*sin(q[3])+qd[4])*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4]))+(p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))-p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+(p['x_BG']*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4]))-p['y_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))+p['M_B']*(sin(q[2])*sin(q[3])*cos(q[4])+sin(q[4])*cos(q[2]))*(p['z_BG']*(qd[2]*sin(q[3])+qd[4])*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+(-p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4]))+(-p['x_BG']*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4]))+p['y_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))-p['M_B']*(-p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4]))-p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))+(p['x_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+(p['y_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4])))*sin(q[2])*cos(q[3])
    KK[2,0] = 0
    KK[2,1] = 0
    KK[2,2] = -p['M_B']*p['g']*p['y_BG']*sin(q[2])*cos(q[3])-p['M_B']*p['g']*p['z_BG']*(-sin(q[2])*sin(q[3])*sin(q[4])+cos(q[2])*cos(q[4]))
    KK[2,3] = p['J_xx_B']*(-qd[2]*qd[3]*cos(q[3])*cos(q[4])+qd[2]*qd[4]*sin(q[3])*sin(q[4]))-p['M_B']*p['g']*p['y_BG']*sin(q[3])*cos(q[2])-p['M_B']*p['g']*p['z_BG']*sin(q[4])*cos(q[2])*cos(q[3])+p['M_B']*p['y_BG']*(-qd[2]*(p['x_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[3])*cos(q[4])+qd[2]*(p['y_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*sin(q[3])*sin(q[4])+(p['x_BG']*qd[2]*cos(q[3])+p['z_BG']*qd[2]*sin(q[3])*cos(q[4]))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))+(p['y_BG']*qd[2]*cos(q[3])-p['z_BG']*qd[2]*sin(q[3])*sin(q[4]))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))-p['M_B']*p['z_BG']*(-qd[2]*(p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))-p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[3])*cos(q[4])+qd[2]*(-p['y_BG']*(qd[2]*sin(q[3])+qd[4])+p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*cos(q[3])+(qd[2]*sin(q[3])+qd[4])*(-p['y_BG']*qd[2]*cos(q[3])+p['z_BG']*qd[2]*sin(q[3])*sin(q[4]))+(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))*(p['x_BG']*qd[2]*sin(q[3])*sin(q[4])+p['y_BG']*qd[2]*sin(q[3])*cos(q[4])))-qd[2]*(p['M_B']*p['x_BG']*p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))+p['M_B']*p['y_BG']*p['z_BG']*(qd[2]*sin(q[3])+qd[4])+(p['J_yy_B']-p['M_B']*(p['x_BG']**2+p['z_BG']**2))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*cos(q[3])+qd[2]*(p['M_B']*p['x_BG']*p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))+p['M_B']*p['y_BG']*p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+(p['J_zz_B']-p['M_B']*(p['x_BG']**2+p['y_BG']**2))*(qd[2]*sin(q[3])+qd[4]))*sin(q[3])*sin(q[4])-(qd[2]*sin(q[3])+qd[4])*(-p['M_B']*p['x_BG']*p['y_BG']*qd[2]*sin(q[3])*cos(q[4])+p['M_B']*p['y_BG']*p['z_BG']*qd[2]*cos(q[3])+qd[2]*(p['J_yy_B']-p['M_B']*(p['x_BG']**2+p['z_BG']**2))*sin(q[3])*sin(q[4]))-(qd[2]*sin(q[4])*cos(q[3])-qd[3]*cos(q[4]))*(-p['M_B']*p['x_BG']*p['z_BG']*qd[2]*sin(q[3])*cos(q[4])+p['M_B']*p['y_BG']*p['z_BG']*qd[2]*sin(q[3])*sin(q[4])+qd[2]*(p['J_zz_B']-p['M_B']*(p['x_BG']**2+p['y_BG']**2))*cos(q[3]))
    KK[2,4] = p['J_xx_B']*(qd[2]*qd[3]*sin(q[3])*sin(q[4])-qd[2]*qd[4]*cos(q[3])*cos(q[4])-qd[3]*qd[4]*sin(q[4]))-p['M_B']*p['g']*p['z_BG']*(-sin(q[2])*sin(q[4])+sin(q[3])*cos(q[2])*cos(q[4]))+p['M_B']*p['y_BG']*(-p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4]))-p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))+(p['x_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+(p['y_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4])))-p['M_B']*p['z_BG']*(p['z_BG']*(qd[2]*sin(q[3])+qd[4])*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4]))+(p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))-p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+(p['x_BG']*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4]))-p['y_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))-(qd[2]*sin(q[3])+qd[4])*(p['M_B']*p['x_BG']*p['y_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+(p['J_yy_B']-p['M_B']*(p['x_BG']**2+p['z_BG']**2))*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4])))-(qd[2]*sin(q[4])*cos(q[3])-qd[3]*cos(q[4]))*(p['M_B']*p['x_BG']*p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['M_B']*p['y_BG']*p['z_BG']*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4])))-(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))*(p['M_B']*p['x_BG']*p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))+p['M_B']*p['y_BG']*p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+(p['J_zz_B']-p['M_B']*(p['x_BG']**2+p['y_BG']**2))*(qd[2]*sin(q[3])+qd[4]))
    KK[3,0] = 0
    KK[3,1] = 0
    KK[3,2] = p['M_B']*p['g']*p['x_BG']*sin(q[2])*cos(q[3])+p['M_B']*p['g']*p['z_BG']*(sin(q[2])*sin(q[3])*cos(q[4])+sin(q[4])*cos(q[2]))
    KK[3,3] = p['J_yy_B']*(qd[2]*qd[3]*sin(q[4])*cos(q[3])+qd[2]*qd[4]*sin(q[3])*cos(q[4]))+p['M_B']*p['g']*p['x_BG']*sin(q[3])*cos(q[2])-p['M_B']*p['g']*p['z_BG']*cos(q[2])*cos(q[3])*cos(q[4])-p['M_B']*p['x_BG']*(-qd[2]*(p['x_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[3])*cos(q[4])+qd[2]*(p['y_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*sin(q[3])*sin(q[4])+(p['x_BG']*qd[2]*cos(q[3])+p['z_BG']*qd[2]*sin(q[3])*cos(q[4]))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))+(p['y_BG']*qd[2]*cos(q[3])-p['z_BG']*qd[2]*sin(q[3])*sin(q[4]))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))+p['M_B']*p['z_BG']*(qd[2]*(-p['x_BG']*(qd[2]*sin(q[3])+qd[4])+p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*cos(q[3])+qd[2]*(-p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[3])*sin(q[4])+(qd[2]*sin(q[3])+qd[4])*(-p['x_BG']*qd[2]*cos(q[3])-p['z_BG']*qd[2]*sin(q[3])*cos(q[4]))+(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))*(-p['x_BG']*qd[2]*sin(q[3])*sin(q[4])-p['y_BG']*qd[2]*sin(q[3])*cos(q[4])))+qd[2]*(p['M_B']*p['x_BG']*p['y_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['M_B']*p['x_BG']*p['z_BG']*(qd[2]*sin(q[3])+qd[4])+(p['J_xx_B']-p['M_B']*(p['y_BG']**2+p['z_BG']**2))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*cos(q[3])+qd[2]*(p['M_B']*p['x_BG']*p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))+p['M_B']*p['y_BG']*p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+(p['J_zz_B']-p['M_B']*(p['x_BG']**2+p['y_BG']**2))*(qd[2]*sin(q[3])+qd[4]))*sin(q[3])*cos(q[4])-(-qd[2]*sin(q[3])-qd[4])*(p['M_B']*p['x_BG']*p['y_BG']*qd[2]*sin(q[3])*sin(q[4])+p['M_B']*p['x_BG']*p['z_BG']*qd[2]*cos(q[3])-qd[2]*(p['J_xx_B']-p['M_B']*(p['y_BG']**2+p['z_BG']**2))*sin(q[3])*cos(q[4]))-(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))*(-p['M_B']*p['x_BG']*p['z_BG']*qd[2]*sin(q[3])*cos(q[4])+p['M_B']*p['y_BG']*p['z_BG']*qd[2]*sin(q[3])*sin(q[4])+qd[2]*(p['J_zz_B']-p['M_B']*(p['x_BG']**2+p['y_BG']**2))*cos(q[3]))
    KK[3,4] = p['J_yy_B']*(qd[2]*qd[3]*sin(q[3])*cos(q[4])+qd[2]*qd[4]*sin(q[4])*cos(q[3])-qd[3]*qd[4]*cos(q[4]))+p['M_B']*p['g']*p['z_BG']*(sin(q[2])*cos(q[4])+sin(q[3])*sin(q[4])*cos(q[2]))-p['M_B']*p['x_BG']*(-p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4]))-p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))+(p['x_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+(p['y_BG']*(qd[2]*sin(q[3])+qd[4])-p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4])))+p['M_B']*p['z_BG']*(p['z_BG']*(qd[2]*sin(q[3])+qd[4])*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+(-p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4]))+(-p['x_BG']*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4]))+p['y_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))-(-qd[2]*sin(q[3])-qd[4])*(p['M_B']*p['x_BG']*p['y_BG']*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4]))+(p['J_xx_B']-p['M_B']*(p['y_BG']**2+p['z_BG']**2))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))-(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))*(p['M_B']*p['x_BG']*p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))+p['M_B']*p['y_BG']*p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+(p['J_zz_B']-p['M_B']*(p['x_BG']**2+p['y_BG']**2))*(qd[2]*sin(q[3])+qd[4]))-(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))*(p['M_B']*p['x_BG']*p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['M_B']*p['y_BG']*p['z_BG']*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4])))
    KK[4,0] = 0
    KK[4,1] = 0
    KK[4,2] = p['M_B']*p['g']*p['x_BG']*(-sin(q[2])*sin(q[3])*sin(q[4])+cos(q[2])*cos(q[4]))-p['M_B']*p['g']*p['y_BG']*(sin(q[2])*sin(q[3])*cos(q[4])+sin(q[4])*cos(q[2]))
    KK[4,3] = -p['J_zz_B']*qd[2]*qd[3]*sin(q[3])+p['M_B']*p['g']*p['x_BG']*sin(q[4])*cos(q[2])*cos(q[3])+p['M_B']*p['g']*p['y_BG']*cos(q[2])*cos(q[3])*cos(q[4])+p['M_B']*p['x_BG']*(-qd[2]*(p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))-p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[3])*cos(q[4])+qd[2]*(-p['y_BG']*(qd[2]*sin(q[3])+qd[4])+p['z_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*cos(q[3])+(qd[2]*sin(q[3])+qd[4])*(-p['y_BG']*qd[2]*cos(q[3])+p['z_BG']*qd[2]*sin(q[3])*sin(q[4]))+(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))*(p['x_BG']*qd[2]*sin(q[3])*sin(q[4])+p['y_BG']*qd[2]*sin(q[3])*cos(q[4])))-p['M_B']*p['y_BG']*(qd[2]*(-p['x_BG']*(qd[2]*sin(q[3])+qd[4])+p['z_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*cos(q[3])+qd[2]*(-p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[3])*sin(q[4])+(qd[2]*sin(q[3])+qd[4])*(-p['x_BG']*qd[2]*cos(q[3])-p['z_BG']*qd[2]*sin(q[3])*cos(q[4]))+(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))*(-p['x_BG']*qd[2]*sin(q[3])*sin(q[4])-p['y_BG']*qd[2]*sin(q[3])*cos(q[4])))-qd[2]*(p['M_B']*p['x_BG']*p['y_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['M_B']*p['x_BG']*p['z_BG']*(qd[2]*sin(q[3])+qd[4])+(p['J_xx_B']-p['M_B']*(p['y_BG']**2+p['z_BG']**2))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*sin(q[3])*sin(q[4])-qd[2]*(p['M_B']*p['x_BG']*p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))+p['M_B']*p['y_BG']*p['z_BG']*(qd[2]*sin(q[3])+qd[4])+(p['J_yy_B']-p['M_B']*(p['x_BG']**2+p['z_BG']**2))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*sin(q[3])*cos(q[4])-(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))*(p['M_B']*p['x_BG']*p['y_BG']*qd[2]*sin(q[3])*sin(q[4])+p['M_B']*p['x_BG']*p['z_BG']*qd[2]*cos(q[3])-qd[2]*(p['J_xx_B']-p['M_B']*(p['y_BG']**2+p['z_BG']**2))*sin(q[3])*cos(q[4]))-(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4]))*(-p['M_B']*p['x_BG']*p['y_BG']*qd[2]*sin(q[3])*cos(q[4])+p['M_B']*p['y_BG']*p['z_BG']*qd[2]*cos(q[3])+qd[2]*(p['J_yy_B']-p['M_B']*(p['x_BG']**2+p['z_BG']**2))*sin(q[3])*sin(q[4]))
    KK[4,4] = p['M_B']*p['g']*p['x_BG']*(-sin(q[2])*sin(q[4])+sin(q[3])*cos(q[2])*cos(q[4]))-p['M_B']*p['g']*p['y_BG']*(sin(q[2])*cos(q[4])+sin(q[3])*sin(q[4])*cos(q[2]))+p['M_B']*p['x_BG']*(p['z_BG']*(qd[2]*sin(q[3])+qd[4])*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4]))+(p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))-p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+(p['x_BG']*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4]))-p['y_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))-p['M_B']*p['y_BG']*(p['z_BG']*(qd[2]*sin(q[3])+qd[4])*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+(-p['x_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4]))+(-p['x_BG']*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4]))+p['y_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))-(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))*(p['M_B']*p['x_BG']*p['y_BG']*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4]))+(p['J_xx_B']-p['M_B']*(p['y_BG']**2+p['z_BG']**2))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))-(qd[2]*sin(q[4])*cos(q[3])-qd[3]*cos(q[4]))*(p['M_B']*p['x_BG']*p['y_BG']*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4]))+p['M_B']*p['y_BG']*p['z_BG']*(qd[2]*sin(q[3])+qd[4])+(p['J_yy_B']-p['M_B']*(p['x_BG']**2+p['z_BG']**2))*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4])))-(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4]))*(p['M_B']*p['x_BG']*p['y_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+(p['J_yy_B']-p['M_B']*(p['x_BG']**2+p['z_BG']**2))*(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4])))-(-qd[2]*cos(q[3])*cos(q[4])-qd[3]*sin(q[4]))*(p['M_B']*p['x_BG']*p['y_BG']*(-qd[2]*sin(q[4])*cos(q[3])+qd[3]*cos(q[4]))+p['M_B']*p['x_BG']*p['z_BG']*(qd[2]*sin(q[3])+qd[4])+(p['J_xx_B']-p['M_B']*(p['y_BG']**2+p['z_BG']**2))*(qd[2]*cos(q[3])*cos(q[4])+qd[3]*sin(q[4])))
    return KK

def B_lin(q=None,qd=None,p=None,u=None):
    """ Linear mass matrix 
    q:  degrees of freedom at operating point, array-like: ['x(t)', 'y(t)', 'phi_x(t)', 'phi_y(t)', 'phi_z(t)']
    qd: dof velocities at operating point, array-like
    p:  parameters, dictionary with keys: []
    u:  inputs at operating point, dictionary with keys: []
           where each values is a constant!
    The columns of B correspond to:   []\\ 
    """
    BB = np.zeros((0,0))
    return BB

